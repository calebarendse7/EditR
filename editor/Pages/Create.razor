@page "/Create"
@using SkiaSharp.Views.Blazor
@using SkiaSharp
@using editor.Models
@using System.Text.RegularExpressions

<PageTitle>Create</PageTitle>

<div id="document-interface">
    <div>
        <h1>Doc Name</h1>
        <div style="display: flex; flex-direction: row;">
            <p style="margin-right: 10px">Number of pages: @_document?.PageCount()</p>
            <p>Font size: @_document?.FontSize()</p>
        </div>
       
        <ul class="nav nav-underline">
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" role="button" aria-expanded="false">File</a>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item">Save</a></li>
                </ul>
            </li>
            <li class="nav-item"><a class="nav-link" @onclick="AddPage">Add Page</a></li>
        </ul>
    </div>
    <SKCanvasView style="width: 100%; height: 100%; display: block;" id="document-canvas" IgnorePixelScaling="true" tabindex="0" @ref="_canvasView" @onclick="CanvasClick" @onkeydown="OnCanvasKeyDown" @onwheel="OnCanvasWheel" OnPaintSurface="OnPaintSurface" />
</div>

@code {
    private Document? _document;
    private SKCanvasView _canvasView;

    protected override void OnAfterRender(bool firstRender)
    {
        
    }
    private void OnPaintSurface(SKPaintSurfaceEventArgs args)
    {
        _document ??= new Document(_canvasView, args.Info.Height, 816, 1056, 50, 96, 96, 96, 96, 14);
        _document.DrawPages(args.Surface.Canvas);
        _document.DrawText(args.Surface.Canvas);
        
    }
    
    private void CanvasClick(MouseEventArgs args)
    {
        /*_currentX = (float) args.OffsetX;
        _currentY = (float) args.OffsetY;*/
    }
    private void OnCanvasKeyDown(KeyboardEventArgs args)
    {
        switch (args.Code){
            case "Space": 
                Console.WriteLine("Space");
                break;
            case "Enter":
                Console.WriteLine("Enter");
                break;
            case "Backspace":
                Console.WriteLine("Backspace");
                break;
            default:
                if (args.Key.Length == 1)
                {
                    _document?.AddText(args.Key);
                }
                break;
                
        }
    }

    private void OnCanvasWheel(WheelEventArgs eventArgs) => _document?.Scroll((float)eventArgs.DeltaY);
    
    private void AddPage() => _document?.AddPage();
    
}    